<div class="row" style="margin:50px">
    <span class="span12">
      <div class="text-center">
        <h1>Rails LTI Tool Provider</h1>
      </div>
        <br>
        <p>
          We have already explained <%= link_to "here",   index_path(anchor: 'buildtp') %> the steps needed to create an LTI Tool Provider. This tutorial provides the steps required to make Ruby on Rails application LTI comptabile.
        </p>
        <p>
          We have a calculator application on Ruby on Rails and by following the steps mentioned below, we make it LTI compatible. You can download the source code here:
        </p>
        <p>
          <strong>
            Step 1:
          </strong>
          Import this <a href="https://github.com/instructure/ims-lti">Ruby Gem</a> which helps in performing most of the LTI tasks such as validating and authenticating LTI requests.<br>
          <pre>
            gem 'ims-lti', '~> 1.1.8'</pre>
        </p><br>
        <p>
          <strong>
            Step 2:
          </strong>
          Create a config file, which will have key and secret for Tool Consumers. Ideally, you would want to create an interface and provide functionality to Tool Consumers to register themselves but for the sake of convenience we are storing key/secret pairs in a config file.<br><br>

          In our app, we create lit_settings.yml with the following content<br>
          <pre>
            production:
              calculatorkey: 'FirstSecret'
              calculatorkey2: 'SecondSecret'

            development:
              calculatorkey: 'FirstSecret'
              calculatorkey2: 'SecondSecret'</pre><br>
          We have two key/value pairs. Two keys ‘calculatorkey’ and ‘calculatorkey2’ with their respective secrets. These will be added in Tool Consumer while registering the application.<br><br>
          <div class="text-center">
            <%= image_tag "keysecret.png", style:'width:40%' %>
          </div><br><br>

          If you create a new settings file, you will have to add this line in config/application.rb<br><br>
          <pre>
            config.lti_settings = Rails.application.config_for(:lti_settings)</pre>
        </p><br>
        <p>
          <strong>
            Step 3:
          </strong>
          Create a controller named 'lti' with launch endpoint. This is optional step, all you need is a launch endpoint. Your launch end point should accept a POST request.
        </p><br>
        <p>
          <strong>
            Step 4:
          </strong>
          When you recieve a launch request, you need to validate if the key in request is present in your system or not. If the key is not present, then throw an error.
          <pre>
            if not Rails.configuration.lti_settings[params[:oauth_consumer_key]]
              render :launch_error, status: 401
              return
            end</pre>
        </p><br>
        <p>
          <strong>
            Step 5:
          </strong>
          If the key is present, then the IMS-LTI gem will validate the LTI request for you and do OAuth authentication.
          <pre>
            require 'oauth/request_proxy/action_controller_request'
            @provider = IMS::LTI::ToolProvider.new(
              params[:oauth_consumer_key],
              Rails.configuration.lti_settings[params[:oauth_consumer_key]],
              params
            )

           if not @provider.valid_request?(request)
              # the request wasn't validated
              render :launch_error, status: 401
              return
            end</pre>
        </p><br>
        <p>
          <strong>
            Step 6:
          </strong>
          At this point, you have validated and authenticated LTI request. In our example, we store the user id and name in a session and redirect the user to use calculator application.
        </p><br>

        <p>
          <strong>
            Step 7:
          </strong>
          Now, if you try to register your application in Canvas, you will need XML configuration for your app. So create a page which provides XML configuration of app. Following is the XML configuration of this calculator app.
          <pre><xmp>           <cartridge_basiclti_link xmlns="http://www.imsglobal.org/xsd/imslticc_v1p0"
              xmlns:blti = "http://www.imsglobal.org/xsd/imsbasiclti_v1p0"
              xmlns:lticm ="http://www.imsglobal.org/xsd/imslticm_v1p0"
              xmlns:lticp ="http://www.imsglobal.org/xsd/imslticp_v1p0"
              xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation = "http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd
              http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd
              http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd
              http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd">
            <blti:title>Calculator</blti:title>
            <blti:description> Calculator  LTI Application</blti:description>
            <blti:icon></blti:icon>
            <blti:launch_url> http://localhost:3000/lti/launch </blti:launch_url>
            <blti:extensions platform="canvas.instructure.com">
              <lticm:property name="privacy_level">public</lticm:property>
              <lticm:options name="course_navigation">
                <lticm:property name="url"> http://localhost:3000/lti/launch </lticm:property>
                <lticm:property name="text"> Calculator </lticm:property>
                <lticm:property name="visibility">public</lticm:property>
                <lticm:property name="default">enabled</lticm:property>
                <lticm:property name="enabled">true</lticm:property>
              </lticm:options>
            </blti:extensions>
            <cartridge_bundle identifierref="BLTI001_Bundle"/>
            <cartridge_icon identifierref="BLTI001_Icon"/>
          </cartridge_basiclti_link></xmp></pre>
        </p><br>
        <p>
          <strong>
            Step 8:
          </strong>
          In our XML, we tell Canvas that we need our Calculator application on Course Navigation. After pasting your XML configuration along with key and a secret in Canvas, you should see your application in course navigation. <br><br>
          <div class="text-center">
            <%= image_tag "navigation.png", style:'width:40%' %>
          </div><br><br>
          You can see above that the Calculator application is added above Settings in the navigation menu.
        </p><br>
        <p>
          <strong>
            Step 9:
          </strong>
          If you launch your application now, you will receive the following error: <br><br>
          <div class="text-center">
            <%= image_tag "invalid_authenticity.png", style:'width:40%' %>
          </div><br><br>
          To fix this, you need to tell Rails that it does not need to verify user before launch request. Add the following line in your application controller.<br><br>
          <pre>
            skip_before_action :verify_authenticity_token, only: :launch</pre>
        </p><br>
        <p>
          <strong>
            Step 10:
          </strong>
          If you again launch your application, now you should see the following warning if your application is not running on HTTPS.<br><br>
          <div class="text-center">
            <%= image_tag "ssl_warning.png", style:'width:40%' %>
          </div><br><br>
          To add SSL certificate on localhost, follow the steps mentioned <%= link_to "here",   index_path(anchor: 'ssl') %>.
        </p><br>
        <p>
          <strong>
            Step 11:
          </strong>
          Now, delete your application from Canvas and update your config file with <strong>https</strong> launch URL and add your application again.
        </p><br>
        <p>
          <strong>
            Step 12:
          </strong>
          Even now, if you launch your application from Course Navigation menu, you will not see anything and you will see the following error in your browser console:
          <pre>
            Refused to display 'https://localhost:3000/calculator' in a frame because it set 'X-Frame-Options' to 'sameorigin'.</pre><br>

          To fix this, you need to add the following line in your controller which needs to be shown in an iframe. For our example, it is Calculator controller with end point calculator.<br><br>
          <pre>
            after_action :allow_iframe, only: [:calculator]
            def allow_iframe
              response.headers.except! 'X-Frame-Options'
            end</pre>

        </p><br>
        <p>
          At this point you should see your application working in Canvas. <br><br>
          <div class="text-center">
            <%= image_tag "calculator_lti.png", style:'width:40%' %>
          </div><br><br>

        </p>





      </div>
    </span>

</div>
